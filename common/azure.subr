# create a resource group
rg_create() {
  cmd az group create --name $RG_NAME --location $LOCATION
}

# creates a service principal
sp_create() {
  cmd az ad sp create-for-rbac --name "sp-$RG_NAME-${RANDOM}" --role Contributor > sp.env
}

# deploy the bicep templates
cluster_deploy() {
  echo "Deploying resources ..."
  cmd az deployment group create \
    --name $ARM_DEPLOYMENT_NAME \
    --mode Incremental \
    --resource-group $RG_NAME \
    --template-file $BICEP_FILE \
    --parameters prefix=$PREFIX  \
    --parameters location=$LOCATION \
    --parameters sqlAdminUsername=$SQL_ADMIN \
    --parameters sqlAdminPassword=$SQL_PASSWORD \
    --parameters adminUsername=$ADMIN_USERNAME \
    --parameters adminPublicKey="$SSH_PUB_KEY"
}

cluster_dry_run() {
  rg_create
  echo "testing the deployment"
  cmd az deployment group what-if \
    --name $ARM_DEPLOYMENT_NAME \
    --mode Incremental \
    --resource-group $RG_NAME \
    --template-file $BICEP_FILE \
    --parameters prefix=$PREFIX  \
    --parameters location=$LOCATION \
    --parameters sqlAdminUsername=$SQL_ADMIN \
    --parameters sqlAdminPassword=$SQL_PASSWORD \
    --parameters adminUsername=$ADMIN_USERNAME \
    --parameters adminPublicKey=$SSH_PUB_KEY
}

do_delete_azure_resources() {
  echo "removing resources in Azure"
  cmd az group delete --name $RG_NAME --no-wait --yes
  
  # retrieves the information about the SP so we can remove it
  sp_load
  az ad sp delete --id $SP_ID
}

aks_get_credentials() {
  az aks get-credentials \
    --name ${prefix}-aks \
    --resource-group ${RG_NAME} \
    --file ${prefix}-aks.kubeconfig
}